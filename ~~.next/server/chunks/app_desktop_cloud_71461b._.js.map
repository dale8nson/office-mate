{
  "version": 3,
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/desktop/cloud/file-card.tsx"],"sourcesContent":["'use client';\nimport { Suspense, useState, useEffect, use } from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport FolderOutlinedIcon from '@mui/icons-material/FolderOutlined';\nimport FunctionsIcon from '@mui/icons-material/Functions';\nimport AutoStoriesOutlinedIcon from '@mui/icons-material/AutoStoriesOutlined';\nimport TextSnippetIcon from '@mui/icons-material/TextSnippet';\nimport TextSnippetOutlinedIcon from '@mui/icons-material/TextSnippetOutlined';\nimport { CardMedia } from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport { getThumbLink, getFiles, getImageSize } from './cloud-actions';\nimport Skeleton from '@mui/material/Skeleton';\nimport Image from 'next/image';\n// import ServerImage from './server-image';\n\nconst FileCard = ({ fileId, file, fileName, thumbLink, index, tabIndex, imageSize }) => {\n  // const [url, setUrl] = useState('');\n  const [size, setSize] = useState(null);\n  // console.log(`FileCard fileName: ${fileName}`);\n  // if(!fileName) fileName = 'blank.docx';\n  // console.log(`FileCard size:`, size);\n  const extensions = {\n    null: <FolderOutlinedIcon sx={{ display: 'block', width: '128px', height: '128px', marginInline: 'auto' }} />,\n    'pdf': <PictureAsPdfOutlinedIcon sx={{ display: 'block', width: '128px', height: '128px', marginInline: 'auto' }} />,\n    'epub': <AutoStoriesOutlinedIcon sx={{ display: 'block', width: '128px', height: '128px', marginInline: 'auto' }} />,\n    'docx': <TextSnippetOutlinedIcon sx={{ display: 'block', width: '128px', height: '128px', marginInline: 'auto' }} />,\n    'xlsx': <FunctionsIcon sx={{ display: 'block', width: '128px', height: '128px', marginInline: 'auto' }} />\n  }\n\n  useEffect(() => {\n\n    // getImageSize(thumbLink).then(size => setSize(size || null));\n    imageSize.then(sz => setSize(sz));\n\n  },[]);\n\n  // const f = use(file)\n  let thumbnail: string | null = null;\n  // let size: {width: number | undefined, height: number | undefined} = {width: 256, height: 256};\n  // if(!!thumbLink) size =  getImageSize(thumbLink as string);\n  // console.log(`size:`, size);\n\n  // console.log(`FileCard fileName: ${fileName}`);\n  const ext = fileName.match(/(?<=[.]).+$/) || 'docx';\n  const fn = fileName.match(/^[^.]*(?=[.])?/);\n\n  return (\n    <>\n       {(size) ? <Box hidden={index !== tabIndex}  component='div' sx={{ position: 'relative', margin: 'auto', width: `${size?.width}px`, height: `calc(${size?.height}px * 1.25 ` }} >\n          <Card elevation={2} sx={{ height: '100%', width: '100%', margin: '1rem auto', '& .MuiPaper-root': { margin: 0, height: '100%', width: '100%' } }}>\n            {!!thumbLink ?\n              \n                <Image alt='thumbnail image' src={thumbLink} width={size?.width} height={size?.height} style={{ marginInline: 'auto', objectFit: 'cover' }} />\n              :\n              extensions[ext] || <TextSnippetOutlinedIcon sx={{ display: 'block', width: '128px', height: '128px', marginInline: 'auto' }} />}\n            <CardContent sx={{ height: `85px`, m: 1, overflow: 'hidden' }} >\n              <Typography variant='caption' sx={{ fontSize: '0.8rem', textOverflow: 'ellipsis' }} >{fn}</Typography>\n            </CardContent>\n          </Card>\n        </Box> :\n        <Skeleton width={'156px'} height={'353px'} sx={{marginBlock:'2.5%'}} />}\n    </>\n  );\n}\n\nexport default FileCard;"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;AAkBA,4CAA4C;AAE5C,MAAM,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE;IACjF,sCAAsC;IACtC,MAAM,CAAC,MAAM,QAAQ,GAAG,4NAAS;IACjC,iDAAiD;IACjD,yCAAyC;IACzC,uCAAuC;IACvC,MAAM,aAAa;QACjB,oBAAM;YAAoB,IAAI;gBAAE,SAAS;gBAAS,OAAO;gBAAS,QAAQ;gBAAS,cAAc;YAAO;;;;;;QACxG,qBAAO;YAA0B,IAAI;gBAAE,SAAS;gBAAS,OAAO;gBAAS,QAAQ;gBAAS,cAAc;YAAO;;;;;;QAC/G,sBAAQ;YAAyB,IAAI;gBAAE,SAAS;gBAAS,OAAO;gBAAS,QAAQ;gBAAS,cAAc;YAAO;;;;;;QAC/G,sBAAQ;YAAyB,IAAI;gBAAE,SAAS;gBAAS,OAAO;gBAAS,QAAQ;gBAAS,cAAc;YAAO;;;;;;QAC/G,sBAAQ;YAAe,IAAI;gBAAE,SAAS;gBAAS,OAAO;gBAAS,QAAQ;gBAAS,cAAc;YAAO;;;;;;IACvG;IAEA,6NAAU;QAER,+DAA+D;QAC/D,UAAU,IAAI,CAAC,CAAA,KAAM,QAAQ;IAE/B,GAAE,EAAE;IAEJ,sBAAsB;IACtB,IAAI,YAA2B;IAC/B,iGAAiG;IACjG,6DAA6D;IAC7D,8BAA8B;IAE9B,iDAAiD;IACjD,MAAM,MAAM,SAAS,KAAK,CAAC,kBAAkB;IAC7C,MAAM,KAAK,SAAS,KAAK,CAAC;IAE1B,qBACE;kBACI,AAAC,qBAAQ;YAAK,QAAQ,UAAU;YAAW,WAAU;YAAM,IAAI;gBAAE,UAAU;gBAAY,QAAQ;gBAAQ,OAAO,CAAC,EAAE,MAAM,MAAM,EAAE,CAAC;gBAAE,QAAQ,CAAC,KAAK,EAAE,MAAM,OAAO,UAAU,CAAC;YAAC;sBACzK,cAAA;gBAAM,WAAW;gBAAG,IAAI;oBAAE,QAAQ;oBAAQ,OAAO;oBAAQ,QAAQ;oBAAa,oBAAoB;wBAAE,QAAQ;wBAAG,QAAQ;wBAAQ,OAAO;oBAAO;gBAAE;;oBAC5I,CAAC,CAAC,0BAEC;wBAAO,KAAI;wBAAkB,KAAK;wBAAW,OAAO,MAAM;wBAAO,QAAQ,MAAM;wBAAQ,OAAO;4BAAE,cAAc;4BAAQ,WAAW;wBAAQ;;;;;+BAE3I,UAAU,CAAC,IAAI,kBAAI;wBAAyB,IAAI;4BAAE,SAAS;4BAAS,OAAO;4BAAS,QAAQ;4BAAS,cAAc;wBAAO;;;;;;kCAC5H;wBAAa,IAAI;4BAAE,QAAQ,CAAC,IAAI,CAAC;4BAAE,GAAG;4BAAG,UAAU;wBAAS;kCAC1D,cAAA;4BAAY,SAAQ;4BAAU,IAAI;gCAAE,UAAU;gCAAU,cAAc;4BAAW;sCAAK;;;;;;;;;;;;;;;;;;;;;iCAI5F;YAAU,OAAO;YAAS,QAAQ;YAAS,IAAI;gBAAC,aAAY;YAAM;;;;;;;AAG1E;uCAEe"}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/desktop/cloud/folder-tabs.tsx"],"sourcesContent":["'use client';\nimport { useState, useEffect, useRef, useMemo, use, Suspense, ReactElement } from 'react';\nimport { SetStateAction, Dispatch, JSXElementConstructor } from 'react';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\nimport Box from '@mui/material/Box';\nimport FileCard from './file-card';\nimport Typography from '@mui/material/Typography';\nimport { getFiles, getFileParentIDs, getThumbLink, imageSize } from './cloud-actions';\nimport FileView from './file-view';\nimport { ThemeContext } from '@emotion/react';\nimport { DataObjectSharp } from '@mui/icons-material';\nimport { NextRequest } from 'next/server';\nimport { metadata } from '@/app/layout';\nimport { Skeleton } from '@mui/material';\n\ninterface Size {\n  width: number | undefined,\n  height: number | undefined\n}\n\ninterface FileMeta {\n  name: string,\n  id: string,\n  mimeType: string,\n  parents: string[],\n  hasThumbnail: boolean,\n  thumbnailLink: string\n}\n\nconst FolderTabs = ({ folderNames, folderFileMap, imageSizes }) => {\n  const [tabIndex, setTabIndex] = useState(0);\n  // const [folderFileMap, setFolderFileMap] = useState(null)\n  // folderFileMap = JSON.parse(folderFileMap);\n\n  const [tabs, setTabs]: [ReactElement[] | null, unknown] = useState<ReactElement[] | null>(null);\n  // const [fileCards, setFileCards]: [ReactElement[] | null, unknown] = useState<ReactElement[] | null>(null);\n  const [ffm, setFfm]: [ReactElement[] | null, unknown] = useState<ReactElement[] | null>(null);\n\n  // console.log(`folderFileMap:`, folderFileMap);\n  folderFileMap.then(map => console.log(`folderFileMap:`, map));\n\n  const fileCards = useMemo(() => {\n      let index = 0;\n      const fileGroups: ReactElement[] = [];\n      for (const folderId in ffm) {\n        const fileCards: ReactElement[] = [];\n        for (const meta of ffm[folderId].files) {\n          fileCards.push(\n              <FileCard index={index} tabIndex={tabIndex} fileId={meta.id} imageSize={imageSizes[meta.id]} file={meta} fileName={meta.name} thumbLink={meta.hasThumbnail ? meta.thumbnailLink : null} />\n          )\n          console.log(`fileCards:`, fileCards);\n        }\n        fileGroups.push(\n          <>\n             {index === tabIndex && (<Box key={folderId} hidden={index !== tabIndex}  sx={{ display: 'grid', position: 'absolute', top: '20px', left: '50px', gridTemplateColumns: 'repeat(4, 1fr)', columnGap: '2.5%' }} >\n                {fileCards}\n              </Box>)}\n          </>\n        )\n        index++;\n      }\n      console.log(`fileGroups:`, fileGroups)\n      return fileGroups;\n    },[ffm, tabIndex]);\n  \n\n  useEffect(() => {\n\n\n    folderNames.then(names => {\n      console.log(`folderNames (length: ${Object.keys(names).length}):`, names)\n      const tbs: ReactElement[] = [];\n      let index = 0;\n      for (const id in names) {\n        tbs.push(\n          <Tab key={id} value={index++} label={names[id]} />\n        )\n      }\n\n      setTabs(tbs);\n      // setTabIndex(0);\n    });\n\n    folderFileMap.then(map => setFfm(map));\n    // folderFileMap.then(map => {\n    //   console.log(`folderFileMap map:`, map);\n    //   let index = 0;\n    //   const fileGroups: ReactElement[] = [];\n    //   for (const folderId in map) {\n    //     const fileCards: ReactElement[] = [];\n    //     for (const meta of map[folderId].files) {\n    //       fileCards.push(\n    //         <Suspense key={meta.id} fallback={<Skeleton variant='rounded' />} >\n    //           <FileCard index={index} tabIndex={tabIndex} fileId={meta.id} file={meta} fileName={meta.name} thumbLink={meta.hasThumbnail ? meta.thumbnailLink : null} />\n    //         </Suspense>\n    //       )\n    //       console.log(`fileCards:`, fileCards);\n    //     }\n    //     fileGroups.push(\n    //       <>\n    //          {index === tabIndex && (<Box key={folderId} hidden={index !== tabIndex}  sx={{ display: 'grid', position: 'absolute', top: '20px', left: '50px', gridTemplateColumns: 'repeat(4, 1fr)', columnGap: '2.5%' }} >\n    //             {fileCards}\n    //           </Box>)}\n    //       </>\n    //     )\n    //     index++;\n    //   }\n    //   console.log(`fileGroups:`, fileGroups)\n    //   setFileCards(fileGroups);\n    // })\n  }, [folderFileMap, folderNames, tabIndex]);\n\n  // folderFileMap.then(map => console.log(`folderFileMap:`, map));\n\n  const tabChanged = (e, v) => {\n    console.log(`new tab index: ${v}`);\n    setTabIndex(v);\n  }\n\n  return (\n    <Box component='main' sx={{ display: 'flex', width: '100vw', height: '100vh' }} >\n      <Box component='section' sx={{ width: '10%', bgcolor: 'background.paper', margin: 0, position: 'fixed', top: '65px', left: '5%', height: '100vh', zIndex: 5 }} >\n        <Tabs orientation='vertical' value={tabIndex} variant='scrollable' onChange={tabChanged} sx={{ marginInline: 'auto' }} >\n          {tabs}\n        </Tabs>\n      </Box>\n      <Box component='section' sx={{ width: '80%', height: '90%', position: 'absolute', top: '10%', left: '20%', overflowY: 'scroll', zIndex: 1 }}>\n          {fileCards}\n      </Box>\n    </Box>\n\n  )\n}\n\nexport default FolderTabs;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}